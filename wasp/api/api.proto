syntax = "proto3";

package api;

import "go.etcd.io/etcd/raft/raftpb/raft.proto";
import "github.com/vx-labs/mqtt-protocol/packet/pb.proto";

message Payload { bytes Data = 1; }

message RaftContext {
  uint64 ID = 1;
  string Address = 2;
}

message JoinClusterResponse { repeated RaftContext Peers = 1; }

message PeerResponse { bool status = 1; }

message CheckHealthRequest {}
message CheckHealthResponse {}

message GetMembersRequest {}
message Member {
  uint64 ID = 1;
  string Address = 2;
  bool IsLeader = 3;
  bool IsAlive = 4;
}
message GetMembersResponse {
  repeated Member Members = 1;
}

service Raft {
  rpc ProcessMessage(raftpb.Message) returns (Payload) {}
  rpc JoinCluster(RaftContext) returns (JoinClusterResponse) {}
  rpc IsPeer(RaftContext) returns (PeerResponse) {}
  rpc CheckHealth(CheckHealthRequest) returns (CheckHealthResponse) {}
  rpc GetMembers(GetMembersRequest) returns (GetMembersResponse) {}
}

message DistributeMessageRequest { packet.Publish Message = 1; }
message DistributeMessageResponse {}

service MQTT {
  rpc DistributeMessage(DistributeMessageRequest)
      returns (DistributeMessageResponse) {}
}