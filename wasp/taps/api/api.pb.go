// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Record struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Topic                []byte   `protobuf:"bytes,2,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Payload              []byte   `protobuf:"bytes,3,opt,name=Payload,proto3" json:"Payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Record) GetTopic() []byte {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *Record) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type PutRecordsRequest struct {
	Records              []*Record `protobuf:"bytes,1,rep,name=Records,proto3" json:"Records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *PutRecordsRequest) Reset()         { *m = PutRecordsRequest{} }
func (m *PutRecordsRequest) String() string { return proto.CompactTextString(m) }
func (*PutRecordsRequest) ProtoMessage()    {}
func (*PutRecordsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *PutRecordsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRecordsRequest.Unmarshal(m, b)
}
func (m *PutRecordsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRecordsRequest.Marshal(b, m, deterministic)
}
func (m *PutRecordsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRecordsRequest.Merge(m, src)
}
func (m *PutRecordsRequest) XXX_Size() int {
	return xxx_messageInfo_PutRecordsRequest.Size(m)
}
func (m *PutRecordsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRecordsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutRecordsRequest proto.InternalMessageInfo

func (m *PutRecordsRequest) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

type PutRecordsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutRecordsResponse) Reset()         { *m = PutRecordsResponse{} }
func (m *PutRecordsResponse) String() string { return proto.CompactTextString(m) }
func (*PutRecordsResponse) ProtoMessage()    {}
func (*PutRecordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *PutRecordsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRecordsResponse.Unmarshal(m, b)
}
func (m *PutRecordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRecordsResponse.Marshal(b, m, deterministic)
}
func (m *PutRecordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRecordsResponse.Merge(m, src)
}
func (m *PutRecordsResponse) XXX_Size() int {
	return xxx_messageInfo_PutRecordsResponse.Size(m)
}
func (m *PutRecordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRecordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutRecordsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Record)(nil), "api.Record")
	proto.RegisterType((*PutRecordsRequest)(nil), "api.PutRecordsRequest")
	proto.RegisterType((*PutRecordsResponse)(nil), "api.PutRecordsResponse")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x54, 0x0a, 0xe3, 0x62, 0x0b, 0x4a,
	0x4d, 0xce, 0x2f, 0x4a, 0x11, 0x92, 0xe1, 0xe2, 0x0c, 0xc9, 0xcc, 0x4d, 0x2d, 0x2e, 0x49, 0xcc,
	0x2d, 0x90, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0e, 0x42, 0x08, 0x08, 0x89, 0x70, 0xb1, 0x86, 0xe4,
	0x17, 0x64, 0x26, 0x4b, 0x30, 0x29, 0x30, 0x6a, 0xf0, 0x04, 0x41, 0x38, 0x42, 0x12, 0x5c, 0xec,
	0x01, 0x89, 0x95, 0x39, 0xf9, 0x89, 0x29, 0x12, 0xcc, 0x60, 0x71, 0x18, 0x57, 0xc9, 0x8a, 0x4b,
	0x30, 0xa0, 0xb4, 0x04, 0x62, 0x74, 0x71, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x2a,
	0x17, 0x3b, 0x54, 0x44, 0x82, 0x51, 0x81, 0x59, 0x83, 0xdb, 0x88, 0x5b, 0x0f, 0xe4, 0x1c, 0x88,
	0x58, 0x10, 0x4c, 0x4e, 0x49, 0x84, 0x4b, 0x08, 0x59, 0x6f, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa,
	0x91, 0x1b, 0x17, 0x73, 0x48, 0x62, 0x81, 0x90, 0x3d, 0x17, 0x17, 0x42, 0x52, 0x48, 0x0c, 0x6c,
	0x00, 0x86, 0x4d, 0x52, 0xe2, 0x18, 0xe2, 0x10, 0x53, 0x94, 0x18, 0x92, 0xd8, 0xc0, 0xbe, 0x37,
	0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x9a, 0xa1, 0x25, 0x58, 0x0a, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TapClient is the client API for Tap service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TapClient interface {
	PutRecords(ctx context.Context, in *PutRecordsRequest, opts ...grpc.CallOption) (*PutRecordsResponse, error)
}

type tapClient struct {
	cc *grpc.ClientConn
}

func NewTapClient(cc *grpc.ClientConn) TapClient {
	return &tapClient{cc}
}

func (c *tapClient) PutRecords(ctx context.Context, in *PutRecordsRequest, opts ...grpc.CallOption) (*PutRecordsResponse, error) {
	out := new(PutRecordsResponse)
	err := c.cc.Invoke(ctx, "/api.Tap/PutRecords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TapServer is the server API for Tap service.
type TapServer interface {
	PutRecords(context.Context, *PutRecordsRequest) (*PutRecordsResponse, error)
}

// UnimplementedTapServer can be embedded to have forward compatible implementations.
type UnimplementedTapServer struct {
}

func (*UnimplementedTapServer) PutRecords(ctx context.Context, req *PutRecordsRequest) (*PutRecordsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutRecords not implemented")
}

func RegisterTapServer(s *grpc.Server, srv TapServer) {
	s.RegisterService(&_Tap_serviceDesc, srv)
}

func _Tap_PutRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRecordsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TapServer).PutRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.Tap/PutRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TapServer).PutRecords(ctx, req.(*PutRecordsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tap_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.Tap",
	HandlerType: (*TapServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PutRecords",
			Handler:    _Tap_PutRecords_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
