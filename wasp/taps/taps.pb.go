// Code generated by protoc-gen-go. DO NOT EDIT.
// source: taps.proto

package taps

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WaspRecord struct {
	Timestamp            int64    `protobuf:"varint,1,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Topic                []byte   `protobuf:"bytes,2,opt,name=Topic,proto3" json:"Topic,omitempty"`
	Payload              []byte   `protobuf:"bytes,3,opt,name=Payload,proto3" json:"Payload,omitempty"`
	Retained             bool     `protobuf:"varint,4,opt,name=Retained,proto3" json:"Retained,omitempty"`
	Sender               string   `protobuf:"bytes,5,opt,name=Sender,proto3" json:"Sender,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WaspRecord) Reset()         { *m = WaspRecord{} }
func (m *WaspRecord) String() string { return proto.CompactTextString(m) }
func (*WaspRecord) ProtoMessage()    {}
func (*WaspRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8e05b184f786e0e, []int{0}
}

func (m *WaspRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WaspRecord.Unmarshal(m, b)
}
func (m *WaspRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WaspRecord.Marshal(b, m, deterministic)
}
func (m *WaspRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WaspRecord.Merge(m, src)
}
func (m *WaspRecord) XXX_Size() int {
	return xxx_messageInfo_WaspRecord.Size(m)
}
func (m *WaspRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_WaspRecord.DiscardUnknown(m)
}

var xxx_messageInfo_WaspRecord proto.InternalMessageInfo

func (m *WaspRecord) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *WaspRecord) GetTopic() []byte {
	if m != nil {
		return m.Topic
	}
	return nil
}

func (m *WaspRecord) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *WaspRecord) GetRetained() bool {
	if m != nil {
		return m.Retained
	}
	return false
}

func (m *WaspRecord) GetSender() string {
	if m != nil {
		return m.Sender
	}
	return ""
}

type PutWaspRecordRequest struct {
	WaspRecords          []*WaspRecord `protobuf:"bytes,1,rep,name=WaspRecords,proto3" json:"WaspRecords,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *PutWaspRecordRequest) Reset()         { *m = PutWaspRecordRequest{} }
func (m *PutWaspRecordRequest) String() string { return proto.CompactTextString(m) }
func (*PutWaspRecordRequest) ProtoMessage()    {}
func (*PutWaspRecordRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8e05b184f786e0e, []int{1}
}

func (m *PutWaspRecordRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutWaspRecordRequest.Unmarshal(m, b)
}
func (m *PutWaspRecordRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutWaspRecordRequest.Marshal(b, m, deterministic)
}
func (m *PutWaspRecordRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutWaspRecordRequest.Merge(m, src)
}
func (m *PutWaspRecordRequest) XXX_Size() int {
	return xxx_messageInfo_PutWaspRecordRequest.Size(m)
}
func (m *PutWaspRecordRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutWaspRecordRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutWaspRecordRequest proto.InternalMessageInfo

func (m *PutWaspRecordRequest) GetWaspRecords() []*WaspRecord {
	if m != nil {
		return m.WaspRecords
	}
	return nil
}

type PutWaspRecordsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutWaspRecordsResponse) Reset()         { *m = PutWaspRecordsResponse{} }
func (m *PutWaspRecordsResponse) String() string { return proto.CompactTextString(m) }
func (*PutWaspRecordsResponse) ProtoMessage()    {}
func (*PutWaspRecordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8e05b184f786e0e, []int{2}
}

func (m *PutWaspRecordsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutWaspRecordsResponse.Unmarshal(m, b)
}
func (m *PutWaspRecordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutWaspRecordsResponse.Marshal(b, m, deterministic)
}
func (m *PutWaspRecordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutWaspRecordsResponse.Merge(m, src)
}
func (m *PutWaspRecordsResponse) XXX_Size() int {
	return xxx_messageInfo_PutWaspRecordsResponse.Size(m)
}
func (m *PutWaspRecordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutWaspRecordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutWaspRecordsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*WaspRecord)(nil), "taps.WaspRecord")
	proto.RegisterType((*PutWaspRecordRequest)(nil), "taps.PutWaspRecordRequest")
	proto.RegisterType((*PutWaspRecordsResponse)(nil), "taps.PutWaspRecordsResponse")
}

func init() { proto.RegisterFile("taps.proto", fileDescriptor_f8e05b184f786e0e) }

var fileDescriptor_f8e05b184f786e0e = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0x41, 0x6b, 0xc2, 0x40,
	0x10, 0x85, 0xbb, 0x8d, 0x5a, 0x1d, 0x4b, 0x29, 0x83, 0xc8, 0x10, 0x3c, 0x2c, 0x39, 0xed, 0xc9,
	0x43, 0xfa, 0x2f, 0x4a, 0x0f, 0x32, 0x06, 0x7a, 0xde, 0x9a, 0x39, 0x04, 0x6a, 0x76, 0x9b, 0x59,
	0x0f, 0xfd, 0x13, 0xfd, 0xcd, 0xa5, 0xb1, 0x1a, 0x05, 0x6f, 0xf3, 0xbd, 0x79, 0x3c, 0xde, 0x0c,
	0x40, 0xf2, 0x51, 0xd7, 0xb1, 0x0b, 0x29, 0xe0, 0xe8, 0x6f, 0x2e, 0x7e, 0x0c, 0xc0, 0xbb, 0xd7,
	0xc8, 0xb2, 0x0b, 0x5d, 0x8d, 0x2b, 0x98, 0x55, 0xcd, 0x5e, 0x34, 0xf9, 0x7d, 0x24, 0x63, 0x8d,
	0xcb, 0x78, 0x10, 0x70, 0x01, 0xe3, 0x2a, 0xc4, 0x66, 0x47, 0xf7, 0xd6, 0xb8, 0x47, 0x3e, 0x02,
	0x12, 0x3c, 0x6c, 0xfc, 0xf7, 0x67, 0xf0, 0x35, 0x65, 0xbd, 0x7e, 0x42, 0xcc, 0x61, 0xca, 0x92,
	0x7c, 0xd3, 0x4a, 0x4d, 0x23, 0x6b, 0xdc, 0x94, 0xcf, 0x8c, 0x4b, 0x98, 0x6c, 0xa5, 0xad, 0xa5,
	0xa3, 0xb1, 0x35, 0x6e, 0xc6, 0xff, 0x54, 0xbc, 0xc2, 0x62, 0x73, 0x48, 0x43, 0x25, 0x96, 0xaf,
	0x83, 0x68, 0xc2, 0x12, 0xe6, 0x83, 0xa8, 0x64, 0x6c, 0xe6, 0xe6, 0xe5, 0xf3, 0xba, 0x3f, 0xe8,
	0xc2, 0x7d, 0x69, 0x2a, 0x08, 0x96, 0x57, 0x59, 0xca, 0xa2, 0x31, 0xb4, 0x2a, 0xe5, 0x16, 0xb2,
	0xca, 0x47, 0x7c, 0x83, 0xa7, 0x6b, 0x03, 0xe6, 0xc7, 0xc4, 0x5b, 0x15, 0xf2, 0xd5, 0x8d, 0xdd,
	0x39, 0xb2, 0xb8, 0xfb, 0x98, 0xf4, 0x8f, 0x7d, 0xf9, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xac, 0x89,
	0x99, 0x98, 0x66, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TapClient is the client API for Tap service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TapClient interface {
	PutWaspRecords(ctx context.Context, in *PutWaspRecordRequest, opts ...grpc.CallOption) (*PutWaspRecordsResponse, error)
}

type tapClient struct {
	cc *grpc.ClientConn
}

func NewTapClient(cc *grpc.ClientConn) TapClient {
	return &tapClient{cc}
}

func (c *tapClient) PutWaspRecords(ctx context.Context, in *PutWaspRecordRequest, opts ...grpc.CallOption) (*PutWaspRecordsResponse, error) {
	out := new(PutWaspRecordsResponse)
	err := c.cc.Invoke(ctx, "/taps.Tap/PutWaspRecords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TapServer is the server API for Tap service.
type TapServer interface {
	PutWaspRecords(context.Context, *PutWaspRecordRequest) (*PutWaspRecordsResponse, error)
}

// UnimplementedTapServer can be embedded to have forward compatible implementations.
type UnimplementedTapServer struct {
}

func (*UnimplementedTapServer) PutWaspRecords(ctx context.Context, req *PutWaspRecordRequest) (*PutWaspRecordsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutWaspRecords not implemented")
}

func RegisterTapServer(s *grpc.Server, srv TapServer) {
	s.RegisterService(&_Tap_serviceDesc, srv)
}

func _Tap_PutWaspRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutWaspRecordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TapServer).PutWaspRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/taps.Tap/PutWaspRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TapServer).PutWaspRecords(ctx, req.(*PutWaspRecordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Tap_serviceDesc = grpc.ServiceDesc{
	ServiceName: "taps.Tap",
	HandlerType: (*TapServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PutWaspRecords",
			Handler:    _Tap_PutWaspRecords_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "taps.proto",
}
